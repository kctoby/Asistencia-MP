--Función que le permitirá al empleado ver aquellos permisos aprobados y rechazados.

--Entrada: ID_PERMISO
--Salida: P_VEREDICTO, TIPO_AUSENCIA, FECHA_SOLICITUD
CREATE OR REPLACE FUNCTION "PERMISOS".F_NOTIFICACION(IN P_ID_PERMISO INTEGER, 
						     OUT P_VEREDICTO character varying(100),
						     OUT P_TIPO_AUSENCIA CHARACTER VARYING(70),
						     OUT P_FECHA_SOLICITUD TIMESTAMP WITHOUT TIME ZONE) 
RETURNS SETOF RECORD AS 
$BODY$
 BEGIN

	RETURN QUERY ((SELECT 'PERMISO APROBADO'::CHARACTER VARYING, C."TIPO_AUSENCIA", B."FECHA_SOLICITUD"
			FROM "PERMISOS"."TBL_PERMISOS" B
			INNER JOIN "PERMISOS"."TBL_TIPOS_AUSENCIAS" C
			ON(B."ID_TIPO_AUSENCIA" = C."ID_TIPO_AUSENCIA")
			WHERE B."ID_PERMISO" = P_ID_PERMISO AND B."ESTADO_REVERTIR_PERMISO" = FALSE AND
			(B."ESTADO_JEFE" = TRUE AND B."F_CAMBIO_ESTADO_JEFE" IS NOT NULL 
			AND B."ESTADO_JPERSONAL" = TRUE AND B."F_CAMBIO_ESTADO_JPERSONAL" IS NOT NULL AND B."VISTO" = FALSE))
		UNION 
		(SELECT 'PERMISO RECHAZADO'::CHARACTER VARYING, E."TIPO_AUSENCIA", D."FECHA_SOLICITUD"
			FROM "PERMISOS"."TBL_PERMISOS" D
			INNER JOIN "PERMISOS"."TBL_TIPOS_AUSENCIAS" E
			ON(D."ID_TIPO_AUSENCIA" = E."ID_TIPO_AUSENCIA")
			WHERE D."ID_PERMISO" = P_ID_PERMISO AND D."ESTADO_REVERTIR_PERMISO" = FALSE AND
			((D."ESTADO_JEFE" = TRUE AND D."F_CAMBIO_ESTADO_JEFE" IS NOT NULL 
			AND D."ESTADO_JPERSONAL" = FALSE AND D."F_CAMBIO_ESTADO_JPERSONAL" IS NOT NULL AND D."VISTO" = FALSE) 
			OR (D."ESTADO_JEFE" = FALSE AND D."F_CAMBIO_ESTADO_JEFE" IS NOT NULL))));
 END;
$BODY$ 
LANGUAGE 'plpgsql';

--Ejecutar la función intento 4
SELECT * FROM "PERMISOS".F_NOTIFICACION(7);